{"version":3,"sources":["webpack:///./src/app/layout/transaction/tansaction-routing.module.ts","webpack:///./src/app/layout/transaction/transaction.component.html","webpack:///./src/app/layout/transaction/transaction.component.scss","webpack:///./src/app/layout/transaction/transaction.component.ts","webpack:///./src/app/layout/transaction/transaction.module.ts","webpack:///./src/app/layout/transaction/wallet/wallet.component.html","webpack:///./src/app/layout/transaction/wallet/wallet.component.scss","webpack:///./src/app/layout/transaction/wallet/wallet.component.ts"],"names":[],"mappings":"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","file":"transaction-transaction-module.js","sourcesContent":["import { NgModule, Component } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { TransactionComponent } from './transaction.component';\nimport { WalletComponent } from './wallet/wallet.component';\n\nconst routes: Routes = [\n    {\n        path: '', component: TransactionComponent,\n    },\n    {\n        path: 'wallet', component:WalletComponent\n\n    }\n];\n\n@NgModule({\n    imports: [RouterModule.forChild(routes)],\n    exports: [RouterModule]\n})\nexport class TransactionRoutingModule {\n}\n","module.exports = \"<div [@routerTransition]>\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-lg-3\\\">\\n</div>\\n<br>\\n    <div class=\\\"col-lg-5\\\">\\n      <div class=\\\"card card-default mb-3\\\">\\n          <div class=\\\"card-header\\\">\\n              <i class=\\\"fa fa-bell fa-fw\\\"></i> Wallets\\n          </div>\\n\\n          <div class=\\\"card-body\\\">\\n            <div class=\\\"list-group\\\">\\n                <a  class=\\\"list-group-item clearfix d-block\\\"*ngFor=\\\"let wallet of wallets\\\" (click)=\\\"open(content,wallet)\\\">\\n                    <i class=\\\"fa fa-money fa-fw\\\"></i> {{wallet}}\\n                </a>\\n            </div>\\n          </div>\\n      </div>\\n\\n  </div>\\n  <ng-template #content let-c=\\\"close\\\" let-d=\\\"dismiss\\\">\\n    <div class=\\\"modal-header\\\">\\n        <h4 class=\\\"modal-title\\\">Login</h4>\\n        <button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"d('Cross click')\\\">\\n            <span aria-hidden=\\\"true\\\">&times;</span>\\n        </button>\\n    </div>\\n    <div class=\\\"modal-body\\\">\\n            <div class=\\\"alert alert-danger\\\" *ngIf=\\\"!passwordvalid\\\">\\n                    <strong>Wrong password!</strong> \\n                </div>\\n        <div class=\\\"form-group row\\\">\\n            <label for=\\\"example-text-input\\\" class=\\\"col-2 col-form-label\\\">Wallet Hash</label>\\n            <div class=\\\"col-10\\\">\\n              <p id=\\\"example-text-input\\\" class=\\\"col-10 col-form-label\\\">{{ selectedHash }}</p>\\n            </div>\\n          </div> <div class=\\\"form-group row\\\">\\n            <label for=\\\"example-text-input\\\" class=\\\"col-2 col-form-label\\\">Pass\\n            </label>\\n            <div class=\\\"col-10\\\">\\n              <input id=\\\"example-text-input\\\" name=\\\"pass\\\" type=\\\"password\\\" class=\\\"col-10 col-form-label\\\" [(ngModel)]=\\\"pass\\\"/>\\n            </div>\\n          </div>\\n          <button type=\\\"button\\\" class=\\\"btn btn-secondary pull-right\\\" (click)=\\\"c('Close click')\\\">Close</button>\\n\\n          <button type=\\\"button\\\" class=\\\"btn btn-primary \\\" (click)=\\\"submit()\\\">Connect</button>\\n\\n\\n    </div>\\n    \\n</ng-template>\\n<div class=\\\"col-lg-12\\\">\\n<button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"open1(content1)\\\" >new wallet</button>\\n</div>\\n\\n<ng-template #content1 let-c=\\\"close\\\" let-d=\\\"dismiss\\\">\\n    <div class=\\\"modal-header\\\">\\n        <h4 class=\\\"modal-title\\\">New wallet</h4>\\n        <button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"d('Cross click')\\\">\\n            <span aria-hidden=\\\"true\\\">&times;</span>\\n        </button>\\n    </div>\\n    <div class=\\\"modal-body\\\">\\n            <div class=\\\"alert alert-danger\\\" *ngIf=\\\"!passwordvalid\\\">\\n                    <strong>Wrong password!</strong> \\n                </div>\\n             <div class=\\\"form-group row\\\">\\n            <label for=\\\"passw\\\" class=\\\"col-2 col-form-label\\\">Pass\\n            </label>\\n            <div class=\\\"col-10\\\">\\n              <input id=\\\"passw\\\" name=\\\"pass\\\" type=\\\"password\\\" class=\\\"col-10 col-form-label\\\" [(ngModel)]=\\\"passw\\\"/>\\n            </div>\\n          </div>\\n          <div class=\\\"form-group row\\\">\\n            <label for=\\\"repass\\\" class=\\\"col-2 col-form-label\\\">repass\\n            </label>\\n            <div class=\\\"col-10\\\">\\n              <input id=\\\"repass\\\" name=\\\"repass\\\" type=\\\"password\\\" class=\\\"col-10 col-form-label\\\" [(ngModel)]=\\\"repass\\\"/>\\n            </div>\\n          </div>\\n\\n          <button type=\\\"button\\\" class=\\\"btn btn-primary \\\"(click)=\\\"newaccount()\\\" >Create</button>\\n\\n\\n    </div>\\n    \\n</ng-template>\\n</div>\\n\"","module.exports = \"\"","import { Component, OnInit } from '@angular/core';\nimport { routerTransition } from '../../router.animations';\nimport { TransactionService, CommunicationService } from '../../shared/services';\nimport { NgbModal, ModalDismissReasons,NgbModalRef } from '@ng-bootstrap/ng-bootstrap';\nimport { FlashMessagesService } from 'angular2-flash-messages';\nimport { Router } from '@angular/router';\n\n\n@Component({\n  selector: 'app-transaction',\n  templateUrl: './transaction.component.html',\n  styleUrls: ['./transaction.component.scss'],\n  animations: [routerTransition()]\n})\nexport class TransactionComponent implements OnInit {\n info:string[]=[];\n  modalRef: NgbModalRef;\n  closeResult: string;\n  wallets: any[]\n  balance:any\n  selectedHash:string;\n  pass:string;\n  passwordvalid:boolean=true;\n  passw:string;\n  constructor(private commService:CommunicationService,private router:Router,private transactionService: TransactionService,private modalService: NgbModal,private flashMessage:FlashMessagesService) { }\n\n  ngOnInit() {\nthis.getAccounts();\n     \n  }\n  open(content,hash) {\nthis.modalRef = this.modalService.open(content);\n    this.selectedHash=hash;\n    console.log(this.selectedHash)\n        this.modalRef.result.then((result) => {\n        this.closeResult = `Closed with: ${result}`;\n    }, (reason) => {\n        this.closeResult = `Dismissed ${this.getDismissReason(reason)}`;\n    });\n}\n\nopen1(content) {\n    this.modalRef = this.modalService.open(content);\n            console.log(this.selectedHash)\n            this.modalRef.result.then((result) => {\n            this.closeResult = `Closed with: ${result}`;\n        }, (reason) => {\n            this.closeResult = `Dismissed ${this.getDismissReason(reason)}`;\n        });\n    }\n    \n\nprivate getDismissReason(reason: any): string {\n    if (reason === ModalDismissReasons.ESC) {\n        return 'by pressing ESC';\n    } else if (reason === ModalDismissReasons.BACKDROP_CLICK) {\n        return 'by clicking on a backdrop';\n    } else {\n        return  `with: ${reason}`;\n    }\n}\nsubmit(){\n  console.log('connect');\n  console.log(this.selectedHash);\n  console.log(this.pass)\n  this.transactionService.getCreds(this.selectedHash.substring(2),this.pass).subscribe(data=>{console.log(data);\n  if (data == null)    {         \n    this.passwordvalid=false;\n    console.log(\"password invalid\")\n  }\n  else {\n    console.log(\"connected\");\n    this.info.push(this.selectedHash);\n    this.info.push(this.pass);\n    console.log(this.info)\n    this.commService.sendInputs(this.info)\n    this.modalRef.close();\n    this.router.navigate(['transaction/wallet'])\n  }\n  })\n}\nnewaccount(){\n    console.log(this.passw)\n    this.transactionService.Newwallet(this.passw).subscribe(data=>{\n      console.log(data);\n      this.getAccounts(); });\n   }\n   getAccounts(){\n        this.transactionService.ethAccounts().subscribe(data=> {\n          this.wallets=data;\n        console.log(this.wallets)})\n       }\n   }\n\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { TransactionComponent } from './transaction.component';\nimport { TransactionRoutingModule } from './tansaction-routing.module';\nimport {NgbModule,NgbActiveModal} from '@ng-bootstrap/ng-bootstrap';\nimport { FormsModule } from '@angular/forms';\nimport { FlashMessagesService } from 'angular2-flash-messages';\nimport { FlashMessagesModule } from 'angular2-flash-messages';\nimport { WalletComponent } from './wallet/wallet.component';\n\n\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n    TransactionRoutingModule,\n    NgbModule.forRoot(),\n    FlashMessagesModule.forRoot(),\n    FormsModule\n  ],\n  declarations: [TransactionComponent, WalletComponent],\n  providers: [FlashMessagesService,NgbActiveModal],\n\n})\nexport class TransactionModule { }\n","module.exports = \"<div [@routerTransition]>\\n    <div class=\\\"col-sm-4\\\">\\n        <div class=\\\"list-group\\\">\\n            <a href=\\\"javascript:void(0)\\\" class=\\\"list-group-item active\\\">Ether</a>\\n            <a href=\\\"javascript:void(0)\\\" class=\\\"list-group-item\\\">{{balance}}</a>\\n        </div>\\n    </div>\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-lg-3\\\">\\n  </div>\\n  <br>\\n      <div class=\\\"col-lg-5\\\">\\n        <div class=\\\"card card-default mb-3\\\">\\n            <div class=\\\"card-header\\\">\\n                <i class=\\\"fa fa-bell fa-fw\\\"></i> Wallets:\\n            </div>\\n  \\n            <div class=\\\"card-body\\\">\\n              <div class=\\\"list-group\\\">\\n                  <form  #frm=\\\"ngForm\\\" (ngSubmit)=\\\"submitTransaction(frm)\\\">\\n\\n                      <div class=\\\"form-group\\\">\\n                          <label for=\\\"disabledSelect\\\">To</label>\\n                          <select name=\\\"to\\\" id=\\\"disabledSelect\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"to\\\">\\n                              <option value=\\\"{{wallet}}\\\" *ngFor=\\\"let wallet of wallets\\\">{{wallet}}</option>\\n                          </select>\\n                      </div>\\n      \\n                      <div class=\\\"form-group has-warning\\\">\\n                          <label class=\\\"form-control-label\\\" for=\\\"inputWarning\\\">Ether</label>\\n                          <input name=\\\"value\\\"type=\\\"text\\\" class=\\\"form-control form-control-warning\\\" id=\\\"inputWarning\\\" [(ngModel)]=\\\"value\\\">\\n                      </div>\\n      \\n                      <div>\\n                          <button type=\\\"submit\\\" class=\\\"btn btn-primary col-lg-12\\\">Send</button>\\n                      </div>\\n                  </form>\\n              </div>\\n            </div>\\n        </div>\\n        \\n        <div *ngIf=\\\"etat == 1\\\"class=\\\"alert alert-success\\\">\\n            <strong>Well done!</strong> Transaction hash: {{hash}}\\n        </div>\\n        <div *ngIf=\\\"etat == 2\\\" class=\\\"alert alert-danger\\\">\\n            <strong>Oh no!</strong> Error\\n        </div>\\n  \\n    </div>\\n  </div>\\n  \"","module.exports = \"\"","import { Component, OnInit } from '@angular/core';\nimport { routerTransition } from '../../../router.animations';\nimport { TransactionService, CommunicationService } from '../../../shared/services';\n\n\n@Component({\n  selector: 'app-wallet',\n  templateUrl: './wallet.component.html',\n  styleUrls: ['./wallet.component.scss'],\n  animations: [routerTransition()]\n\n})\nexport class WalletComponent implements OnInit {\n  wallets: any[];\n  info:string[]=[];\n  hash:any;\n  etat=0;\n  balance:any;\n  constructor(private commService:CommunicationService,private transactionService: TransactionService) { }\n\n  ngOnInit() {\n    this.commService.receiveInputs().subscribe(data=>{\n      console.log(\"wallet\");\n      this.info=data;\n      console.log(this.info);\n      this.getBalance();\n  \n    })\n    this.transactionService.ethAccounts().subscribe(data => {\n      this.wallets = data;\n      })\n      this.transactionService.ethAccounts()\n  }\n  submitTransaction(form){\n    console.log(\"submit transaction\")\n    console.log(this.info)\n    console.log(form.value.to)\n    console.log(form.value.value)\n    this.transactionService.getTransactionHash(this.info[0].substring(2),form.value.to,this.info[1],form.value.value).subscribe(\n      data=>{\n        console.log(data);\n       this.hash=data.transactionHash;\n        this.etat=1;\n        this.getBalance();\n      },\n      error=>{\n        console.log(\"error\");\n        console.log(error);\n        this.etat=2;\n      }\n    )\n  }\n  getBalance(){\n    this.transactionService.ethBalance(this.info[0]).subscribe(data=>{this.balance=data})\n\n  }\n\n}\n"],"sourceRoot":""}